// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Mini App
// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ Telegram Web App API
const isTelegramEnvironment = window.Telegram && window.Telegram.WebApp;

let tg;
if (isTelegramEnvironment) {
    // –†–µ–∞–ª—å–Ω—ã–π Telegram Web App API
    tg = window.Telegram.WebApp;
    tg.ready();
    tg.expand();
} else {
    // Mock –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    tg = {
        ready: () => console.log('Mock: Telegram WebApp ready'),
        expand: () => console.log('Mock: Telegram WebApp expand'),
        sendData: (data) => console.log('Mock sendData:', data),
        close: () => console.log('Mock close'),
        showPopup: (options) => console.log('Mock showPopup:', options)
    };
}

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
let selectedPhotoId = null;
// –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
let selectedVideoId = selectedPhotoId;

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–±—Ä–∞–Ω—ã - —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
window.botParams = {
    bot_id: null,
    user_id: null,
    message_id: null,
    saved: false
};
// Function to save bot parameters from URL
function saveBotParamsFromURL() {
    const urlParams = new URLSearchParams(window.location.search);
    
    window.botParams.bot_id = urlParams.get('bot');
    window.botParams.user_id = urlParams.get('user');
    window.botParams.message_id = urlParams.get('message');
    window.botParams.saved = true;
    
    console.log('=== BOT PARAMETERS SAVED ===');
    console.log('Bot ID:', window.botParams.bot_id);
    console.log('User ID:', window.botParams.user_id);
    console.log('Message ID:', window.botParams.message_id);
    console.log('=== END SAVE ===');
    
    // Also save to localStorage as backup
    try {
        localStorage.setItem('botParams', JSON.stringify(window.botParams));
    } catch (e) {
        console.warn('Could not save to localStorage:', e);
    }
    
    return window.botParams;
}

function loadBotParams() {
    // First try to get from global variable
    if (window.botParams && window.botParams.saved) {
        console.log('Loading bot params from global variable');
        return window.botParams;
    }
    
    // Fallback to localStorage
    try {
        const saved = localStorage.getItem('botParams');
        if (saved) {
            window.botParams = JSON.parse(saved);
            console.log('Loading bot params from localStorage');
            return window.botParams;
        }
    } catch (e) {
        console.warn('Could not load from localStorage:', e);
    }
    
    // If nothing found, return empty params
    console.log('No bot params found');
    return {
        bot_id: null,
        user_id: null,
        message_id: null,
        saved: false
    };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–µ–≤—å—é —Ñ–æ—Ç–æ
function createPhotoPreview(photo) {
    const previewElement = document.createElement('div');
    previewElement.className = 'photo-preview';
    previewElement.setAttribute('data-id', photo.id);
    
    // –£–±–∏—Ä–∞–µ–º NEW –±–µ–π–¥–∂–∏ - –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è
    const newBadge = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –ø—Ä–µ–≤—å—é
    previewElement.innerHTML = `
        <div class="photo-container">
            <!-- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ -->
            <div class="loading-indicator">
                <div class="loading-spinner"></div>
                <div class="loading-text">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            </div>
            
            <!-- –û—Å–Ω–æ–≤–Ω–æ–µ —Ñ–æ—Ç–æ -->
            <img class="preview-image" src="${photo.image_url}" alt="${photo.title}" style="display: none;">
            
            <!-- Fallback –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–µ) -->
            <img class="fallback-image" src="${typeof UNIVERSAL_FALLBACK_IMAGE !== 'undefined' ? UNIVERSAL_FALLBACK_IMAGE : ''}" alt="${photo.title}" style="display: none;">
            
            <!-- Overlay —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—à–∏–±–∫–µ -->
            <div class="error-overlay" style="display: none;">
                <div class="error-icon">‚ö†Ô∏è</div>
                <div class="error-text">–§–æ—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</div>
            </div>
            
            ${newBadge}
        </div>
    `;
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–µ–≤—å—é
    const imageElement = previewElement.querySelector('.preview-image');
    const loadingIndicator = previewElement.querySelector('.loading-indicator');
    const fallbackImage = previewElement.querySelector('.fallback-image');
    const errorOverlay = previewElement.querySelector('.error-overlay');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
    imageElement.addEventListener('load', function() {
        console.log(`–§–æ—Ç–æ ${photo.id} –∑–∞–≥—Ä—É–∂–µ–Ω–æ`);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        loadingIndicator.style.display = 'none';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ç–æ
        imageElement.style.display = 'block';
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
    imageElement.addEventListener('error', function(e) {
        console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ ${photo.id}:`, e);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        loadingIndicator.style.display = 'none';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –∏ –æ—à–∏–±–∫—É
        fallbackImage.style.display = 'block';
        errorOverlay.style.display = 'flex';
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ fallback –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    fallbackImage.addEventListener('load', function() {
        console.log(`Fallback –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${photo.id} –∑–∞–≥—Ä—É–∂–µ–Ω–æ`);
        // Fallback –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—à–∏–±–∫–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ fallback –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    fallbackImage.addEventListener('error', function() {
        console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ fallback –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${photo.id}`);
        loadingIndicator.style.display = 'none';
        errorOverlay.style.display = 'flex';
    });
    
    // –¢–∞–π–º–∞—É—Ç –¥–ª—è —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–≥–æ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è (5 —Å–µ–∫—É–Ω–¥)
    setTimeout(() => {
        if (imageElement.style.display === 'none' && loadingIndicator.style.display !== 'none') {
            console.warn(`–§–æ—Ç–æ ${photo.id} –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å –∑–∞ 5 —Å–µ–∫—É–Ω–¥, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback`);
            loadingIndicator.style.display = 'none';
            fallbackImage.style.display = 'block';
            errorOverlay.style.display = 'flex';
        }
    }, 5000);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–æ—Ç–æ
    previewElement.addEventListener('click', () => {
        // –°–Ω–∞—á–∞–ª–∞ —É–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å 'selected' —É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        document.querySelectorAll('.photo-preview, .video-preview').forEach(el => el.classList.remove('selected'));
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å 'selected' —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
        previewElement.classList.add('selected');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ –≤ localStorage
        localStorage.setItem('selectedPhotoId', photo.id);
        localStorage.setItem('selectedVideoId', photo.id); // –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ñ–æ—Ç–æ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        window.location.href = `photo.html?id=${photo.id}`;
    });
    
    return previewElement;
}

// –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
function createVideoPreview(video) {
    return createPhotoPreview(video);
}

// –§—É–Ω–∫—Ü–∏–∏ –ª–∞–π–∫–æ–≤ –∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —É–±—Ä–∞–Ω—ã

// –§—É–Ω–∫—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —É–¥–∞–ª–µ–Ω—ã - —Ç–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–∞—è —Å–µ—Ç–∫–∞

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–µ—Ç–∫–∏ —Ñ–æ—Ç–æ
async function loadPhotoGrid() {
    const photoGridElement = document.getElementById('photoGrid') || document.getElementById('videoGrid');
    
    // –û—á–∏—â–∞–µ–º —Å–µ—Ç–∫—É –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    photoGridElement.innerHTML = '';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π (photoData –∏–ª–∏ videoData)
    const dataToUse = (typeof photoData !== 'undefined' && Array.isArray(photoData)) ? photoData : videoData;
    if (typeof dataToUse !== 'undefined' && Array.isArray(dataToUse)) {
        
        if (dataToUse.length === 0) {
            photoGridElement.innerHTML = '<p class="no-videos">üî• –°–∫–æ—Ä–æ —Ç—É—Ç –±—É–¥–µ—Ç –≥–æ—Ä—è—á–æ! üî•<br><span class="coming-soon">–ù–æ–≤—ã–µ —Ñ–æ—Ç–æ —É–∂–µ –≥–æ—Ç–æ–≤—è—Ç—Å—è...</span></p>';
            return;
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ñ–æ—Ç–æ
        dataToUse.forEach(photo => {
            const previewElement = createPhotoPreview(photo);
            photoGridElement.appendChild(previewElement);
        });
    } else {
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        photoGridElement.innerHTML = '<p class="error-message">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>';
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä
    const savedPhotoId = localStorage.getItem('selectedPhotoId') || localStorage.getItem('selectedVideoId');
    if (savedPhotoId) {
        // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–¥–µ–ª—è–µ–º –µ–≥–æ
        const element = document.querySelector(`.photo-preview[data-id="${savedPhotoId}"], .video-preview[data-id="${savedPhotoId}"]`);
        if (element) {
            element.classList.add('selected');
            selectedPhotoId = savedPhotoId;
        }
    }
}

// –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
async function loadVideoGrid() {
    return loadPhotoGrid();
}
// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å–µ—Ç–∫—É –≤–∏–¥–µ–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', async () => {
    saveBotParamsFromURL();

    try {
        await loadPhotoGrid();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
        await loadPhotoGrid();
    }
}); 